{"version":3,"sources":["store/authSlice.js","components/Header.js","store/cartSlice.js","components/CartItem.js","pages/cart.js","pages/profile.js","dummy_products.js","pages/shop.js","pages/home.js","pages/login.js","pages/signup.js","App.js","store/index.js","index.js"],"names":["changePassword","createAsyncThunk","newPassword","thunkApi","a","authState","getState","auth","fetch","process","method","body","JSON","stringify","idToken","password","returnSecureToken","header","response","json","data","ok","rejectWithValue","error","message","createAccount","email","signInUser","console","log","authSlice","createSlice","name","initialState","isLoggedIn","errorMessage","reducers","signOutUser","state","action","localStorage","removeItem","logInUser","payload","resetError","extraReducers","builder","addCase","rejected","pending","fulfilled","setItem","authActions","actions","createSelector","Header","dispatch","useDispatch","useSelector","className","to","onClick","sendCart","_","cartState","cart","items","err","cartSlice","changed","replaceCart","addItemToCart","newItem","matchedItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","CartItem","props","Cart","useState","totalAmount","setTotalAmount","cartItems","forEach","useEffect","map","Profile","setNewPassword","history","useHistory","submitHandler","e","preventDefault","resultAction","result","unwrapResult","onSubmit","htmlFor","type","onChange","target","value","DUMMY_PRODUCTS","Shop","product","Number","addToCartHandler","Home","Login","errorState","setEmail","setPassword","Signup","App","token","getItem","path","exact","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34e31d5c.chunk.js","sourcesContent":["import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createSelector,\r\n} from '@reduxjs/toolkit';\r\n\r\nexport const changePassword = createAsyncThunk(\r\n  'users/auth/changePassword',\r\n  async (newPassword, thunkApi) => {\r\n    const authState = thunkApi.getState().auth;\r\n    const response = await fetch(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${process.env.REACT_APP_API_KEY}`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          idToken: authState.idToken,\r\n          password: newPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        header: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      return thunkApi.rejectWithValue(data.error.message);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n);\r\nexport const createAccount = createAsyncThunk(\r\n  'users/auth/signUp',\r\n  async ({ email, password }, thunkApi) => {\r\n    const response = await fetch(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_API_KEY}`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n          returnSecureToken: true,\r\n        }),\r\n        header: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      return thunkApi.rejectWithValue(data.error.message);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n);\r\nexport const signInUser = createAsyncThunk(\r\n  'users/auth/signIn',\r\n  async ({ email, password }, thunkApi) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_API_KEY}`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true,\r\n          }),\r\n          header: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        console.log(data);\r\n        return thunkApi.rejectWithValue(data.error.message);\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const initialState = {\r\n  idToken: '',\r\n  isLoggedIn: false,\r\n  errorMessage: '',\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    signOutUser(state, action) {\r\n      state.isLoggedIn = false;\r\n      localStorage.removeItem('idToken');\r\n      state.idToken = null;\r\n    },\r\n    logInUser(state, action) {\r\n      state.isLoggedIn = true;\r\n      state.idToken = action.payload;\r\n    },\r\n    resetError(state, action) {\r\n      state.errorMessage = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(changePassword.rejected, (state, action) => {\r\n        state.errorMessage = action.payload;\r\n      })\r\n      .addCase(changePassword.pending, (state, action) => {})\r\n      .addCase(changePassword.fulfilled, (state, action) => {\r\n        localStorage.setItem('idToken', action.payload.idToken);\r\n      })\r\n      .addCase(createAccount.rejected, (state, action) => {\r\n        state.errorMessage = action.payload;\r\n      })\r\n      .addCase(createAccount.pending, (state, action) => {})\r\n      .addCase(createAccount.fulfilled, (state, action) => {\r\n        state.isLoggedIn = true;\r\n        state.idToken = action.payload.idToken;\r\n        localStorage.setItem('idToken', action.payload.idToken);\r\n      })\r\n      .addCase(signInUser.rejected, (state, action) => {\r\n        state.errorMessage = action.payload;\r\n      })\r\n      .addCase(signInUser.pending, (state, action) => {})\r\n      .addCase(signInUser.fulfilled, (state, action) => {\r\n        state.isLoggedIn = true;\r\n        state.idToken = action.payload.idToken;\r\n        localStorage.setItem('idToken', action.payload.idToken);\r\n      });\r\n  },\r\n});\r\nexport const authActions = authSlice.actions;\r\n\r\nexport const selectToken = (state) => state.auth.idToken;\r\nexport const selectIsLoggedIn = createSelector(\r\n  [selectToken],\r\n  (idToken) => idToken !== ''\r\n);\r\nexport default authSlice;\r\n","import { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Fragment } from 'react';\r\nimport { authActions } from '../store/authSlice';\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n  const logOutHandler = () => {\r\n    dispatch(authActions.signOutUser());\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Redux Exercise</h1>\r\n      <ul className=\"navbar\">\r\n        {isLoggedIn ? (\r\n          <Fragment>\r\n            <li>\r\n              <Link to=\"/shop\">Shop</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/cart\">Cart</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/profile\">Profile</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\" onClick={logOutHandler}>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          </Fragment>\r\n        ) : (\r\n          <li>\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const sendCart = createAsyncThunk(\r\n  'cart/sendCart',\r\n  async (_, thunkApi) => {\r\n    const cartState = thunkApi.getState().cart;\r\n    try {\r\n      const response = await fetch(\r\n        'https://react-auth-practice-b646a-default-rtdb.europe-west1.firebasedatabase.app/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(cartState.items),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        return thunkApi.rejectWithValue(data.err.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n);\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.items = action.payload;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const matchedItem = state.items.find((item) => newItem.id === item.id);\r\n      if (matchedItem) {\r\n        matchedItem.quantity++;\r\n        matchedItem.totalPrice += matchedItem.price;\r\n      } else {\r\n        state.items.push(newItem);\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const matchedItem = state.items.find((item) => item.id === id);\r\n      if (matchedItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        matchedItem.quantity--;\r\n        matchedItem.totalPrice = matchedItem.totalPrice - matchedItem.price;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase((sendCart.rejected = (state, actions) => {}));\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import { useDispatch } from 'react-redux';\r\nimport { cartActions } from '../store/cartSlice';\r\n\r\nconst CartItem = (props) => {\r\n  const dispatch = useDispatch();\r\n  const removeHandler = () => {\r\n    dispatch(cartActions.removeItemFromCart(props.id));\r\n  };\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <p>{props.name}</p>\r\n      <p>{props.price}$</p>\r\n      <p>Quantity:{props.quantity}</p>\r\n      <button onClick={removeHandler}>Remove</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CartItem from '../components/CartItem';\r\nimport { cartActions, sendCart } from '../store/cartSlice';\r\nconst Cart = () => {\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector((state) => state.cart.items);\r\n\r\n  let totalPrice = 0;\r\n  cartItems.forEach((item) => {\r\n    totalPrice += item.totalPrice;\r\n  });\r\n\r\n  const checkoutHandler = () => {\r\n    dispatch(cartActions.replaceCart([]));\r\n    dispatch(sendCart());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalAmount(totalPrice);\r\n    dispatch(sendCart());\r\n  }, [cartItems, dispatch, totalPrice]);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          price={item.price}\r\n          quantity={item.quantity}\r\n        ></CartItem>\r\n      ))}\r\n      <p>Total Amount:{totalAmount}$</p>\r\n      <button onClick={checkoutHandler}>Checkout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { changePassword, authActions } from '../store/authSlice';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nconst Profile = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const authState = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n  const changePasswordHandler = (e) => {\r\n    setNewPassword(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(authActions.resetError());\r\n  }, [dispatch]);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const resultAction = await dispatch(changePassword(newPassword));\r\n      const result = unwrapResult(resultAction);\r\n      dispatch(authActions.logInUser(result.idToken));\r\n      if (!resultAction.error) {\r\n        history.push('/shop');\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <p className=\"error\">{authState.errorMessage}</p>\r\n        <label htmlFor=\"password\">New Password</label>\r\n        <input type=\"text\" onChange={changePasswordHandler} />\r\n        <button type=\"submit\">Change Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const DUMMY_PRODUCTS = [\r\n  {\r\n    id: 1,\r\n    name: 'Jean',\r\n    price: 8,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'T-shirt',\r\n    price: 6,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Hoodie',\r\n    price: 14,\r\n  },\r\n];\r\n\r\nexport default DUMMY_PRODUCTS;\r\n","import { useDispatch } from 'react-redux';\r\nimport DUMMY_PRODUCTS from '../dummy_products';\r\nimport { cartActions } from '../store/cartSlice';\r\nconst Shop = () => {\r\n  const dispatch = useDispatch();\r\n  const addToCartHandler = (product) => {\r\n    const item = {\r\n      id: product.id,\r\n      name: product.name,\r\n      price: Number(product.price),\r\n      quantity: 1,\r\n      totalPrice: Number(product.price),\r\n    };\r\n    dispatch(cartActions.addItemToCart(item));\r\n  };\r\n  return (\r\n    <div>\r\n      <ul className=\"shop-list\">\r\n        {DUMMY_PRODUCTS.map((product) => (\r\n          <li key={product.id} className=\"shop-item\">\r\n            <p>{product.name}</p>\r\n            <p>{product.price}$</p>\r\n            <button onClick={() => addToCartHandler(product)}>\r\n              Add to Cart\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","const Home = () => {\r\n  return (\r\n    <div>\r\n      <p>Please login to continue</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authActions, signInUser } from '../store/authSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\nconst Login = () => {\r\n  const errorState = useSelector((state) => state.auth.errorMessage);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(authActions.resetError());\r\n  }, [dispatch]);\r\n  const emailChangeHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const resultAction = await dispatch(signInUser({ email, password }));\r\n      const result = unwrapResult(resultAction);\r\n      dispatch(authActions.logInUser(result.idToken));\r\n      if (!resultAction.error) {\r\n        history.push('/shop');\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"login-form\" onSubmit={submitHandler}>\r\n        <h2>Login</h2>\r\n        <p className=\"error\">{errorState}</p>\r\n        <label htmlFor=\"email\">Enter your e-mail</label>\r\n        <input aria-label=\"email\" type=\"email\" onChange={emailChangeHandler} />\r\n        <label htmlFor=\"password\">Enter your password</label>\r\n        <input\r\n          aria-label=\"password\"\r\n          type=\"password\"\r\n          onChange={passwordChangeHandler}\r\n        />\r\n        <button>Login</button>\r\n        <Link to=\"/signup\" className=\"signup-button\">\r\n          Create new account\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { authActions, createAccount } from '../store/authSlice';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const errorState = useSelector((state) => state.auth.errorMessage);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(authActions.resetError());\r\n  }, [dispatch]);\r\n  const emailChangeHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const resultAction = await dispatch(createAccount({ email, password }));\r\n      const result = unwrapResult(resultAction);\r\n      dispatch(authActions.logInUser(result.idToken));\r\n      if (!resultAction.error) {\r\n        history.push('/shop');\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <h2>Signup</h2>\r\n        <p className=\"error\">{errorState}</p>\r\n        <label htmlFor=\"email\">Create your e-mail</label>\r\n        <input type=\"email\" onChange={emailChangeHandler} />\r\n        <label htmlFor=\"password\">Create your password</label>\r\n        <input type=\"password\" onChange={passwordChangeHandler} />\r\n        <button>Signup</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import Header from './components/Header';\nimport Cart from './pages/cart';\nimport Profile from './pages/profile';\nimport Shop from './pages/shop';\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport Signup from './pages/signup';\nimport { authActions } from './store/authSlice';\nfunction App() {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = localStorage.getItem('idToken');\n    if (token) {\n      dispatch(authActions.logInUser(token));\n    }\n  }, [dispatch]);\n  return (\n    <div className=\"app\">\n      <Header></Header>\n      <main>\n        <Switch>\n          <Route path=\"/\" exact>\n            {isLoggedIn ? <Redirect to=\"/shop\" /> : <Home />}\n          </Route>\n          {isLoggedIn && (\n            <Fragment>\n              <Route path=\"/cart\">\n                <Cart></Cart>\n              </Route>\n              <Route path=\"/profile\">\n                <Profile></Profile>\n              </Route>\n              <Route path=\"/shop\">\n                <Shop></Shop>\n              </Route>\n            </Fragment>\n          )}\n          <Route path=\"/login\">\n            <Login></Login>\n          </Route>\n          <Route path=\"/signup\">\n            <Signup></Signup>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport cartSlice from './cartSlice';\r\nimport authSlice from './authSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: authSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}